{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _templateObject;\nimport { useState, useEffect } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport tw from \"twrnc\";\nimport numeral from \"numeral\";\nimport { formatBigBalance, formatPercent, formatCurrency, formatValue } from \"../utils\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar convertMiniumNumber = function convertMiniumNumber(number) {\n  if (number.toString().includes(\"e-\")) {\n    var numStr = number.toString();\n    var eIndex = numStr.indexOf(\"e\");\n    if (eIndex !== -1) {\n      var exponent = parseInt(numStr.slice(eIndex + 2), 10);\n      var significand = parseFloat(numStr.slice(0, 4).split(\"\").filter(function (e) {\n        return e != \".\";\n      }).join(\"\"));\n      return \"0.0<sub>\" + (exponent - 1) + \"</sub>\" + significand;\n    }\n  } else {\n    return number;\n  }\n};\nexport default function Number(_ref) {\n  var type = _ref.type,\n    number = _ref.number;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    numberFormat = _useState2[0],\n    setNumberFormat = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    numberSize = _useState4[0],\n    setNumberSize = _useState4[1];\n  useEffect(function () {\n    var _formatBigBalance = formatBigBalance(number),\n      number_format = _formatBigBalance.number_format,\n      number_size = _formatBigBalance.number_size;\n    setNumberFormat(number_format);\n    setNumberSize(number_size);\n  }, [number]);\n  return _jsx(View, {\n    children: type === \"percent\" ? _jsx(Text, {\n      children: formatPercent(number) === \"NaN\" ? 0 : formatPercent(number)\n    }) : _jsx(View, {\n      children: numberSize && numberSize !== \"K\" || formatPercent(number) === \"NaN\" ? _jsxs(View, {\n        style: tw(_templateObject || (_templateObject = _taggedTemplateLiteralLoose([\"flex items-center\"]))),\n        children: [_jsxs(View, {\n          children: [type === \"value\" ? \"$\" : \"\", numeral(numberFormat).format(\"0,0.00\") === \"NaN\" ? _jsx(View, {\n            children: convertMiniumNumber(numberFormat)\n          }) : _jsx(View, {\n            children: numeral(numberFormat).format(\"0,0.00\")\n          })]\n        }), _jsx(View, {\n          children: numberSize\n        })]\n      }) : _jsx(View, {\n        children: type === \"value\" ? _jsx(View, {\n          children: number !== 0 && number > 0 && number < 0.01 ? _jsx(View, {\n            children: formatValue(number)\n          }) : _jsxs(View, {\n            children: [\" \", formatValue(number)]\n          })\n        }) : _jsxs(View, {\n          children: [\" \", formatCurrency(number)]\n        })\n      })\n    })\n  });\n}","map":{"version":3,"names":["useState","useEffect","View","Text","tw","numeral","formatBigBalance","formatPercent","formatCurrency","formatValue","jsx","_jsx","jsxs","_jsxs","convertMiniumNumber","number","toString","includes","numStr","eIndex","indexOf","exponent","parseInt","slice","significand","parseFloat","split","filter","e","join","Number","_ref","type","_useState","_useState2","_slicedToArray","numberFormat","setNumberFormat","_useState3","_useState4","numberSize","setNumberSize","_formatBigBalance","number_format","number_size","children","style","_templateObject","_taggedTemplateLiteralLoose","format"],"sources":["/Users/binhnguyen/Desktop/xnft/src/components/Number.tsx"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { View, Text } from \"react-native\";\nimport tw from \"twrnc\";\nimport numeral from \"numeral\";\nimport {\n  formatBigBalance,\n  formatPercent,\n  formatCurrency,\n  formatValue,\n} from \"../utils\";\n\ntype Props = {\n  type: \"amount\" | \"balance\" | \"percent\" | \"value\";\n  number: number;\n};\n\nconst convertMiniumNumber = (number: any) => {\n  if (number.toString().includes(\"e-\")) {\n    const numStr = number.toString();\n    const eIndex = numStr.indexOf(\"e\");\n    if (eIndex !== -1) {\n      const exponent = parseInt(numStr.slice(eIndex + 2), 10);\n      const significand = parseFloat(\n        numStr\n          .slice(0, 4)\n          .split(\"\")\n          .filter((e: any) => e != \".\")\n          .join(\"\")\n      );\n\n      return `0.0<sub>${exponent - 1}</sub>${significand}`;\n    }\n  } else {\n    return number;\n  }\n};\n\nexport default function Number({ type, number }: Props) {\n  const [numberFormat, setNumberFormat] = useState<any>(0);\n  const [numberSize, setNumberSize] = useState<string>(\"\");\n\n  useEffect(() => {\n    const { number_format, number_size } = formatBigBalance(number);\n    setNumberFormat(number_format);\n    setNumberSize(number_size);\n  }, [number]);\n\n  return (\n    <View>\n      {type === \"percent\" ? (\n        <Text>\n          {formatPercent(number) === \"NaN\" ? 0 : formatPercent(number)}\n        </Text>\n      ) : (\n        <View>\n          {(numberSize && numberSize !== \"K\") ||\n          formatPercent(number) === \"NaN\" ? (\n            <View style={tw`flex items-center`}>\n              <View>\n                {type === \"value\" ? \"$\" : \"\"}\n                {numeral(numberFormat).format(\"0,0.00\") === \"NaN\" ? (\n                  <View>{convertMiniumNumber(numberFormat)}</View>\n                ) : (\n                  <View>{numeral(numberFormat).format(\"0,0.00\")}</View>\n                )}\n              </View>\n              <View>{numberSize}</View>\n            </View>\n          ) : (\n            <View>\n              {type === \"value\" ? (\n                <View>\n                  {number !== 0 && number > 0 && number < 0.01 ? (\n                    <View>{formatValue(number)}</View>\n                  ) : (\n                    <View> {formatValue(number)}</View>\n                  )}\n                </View>\n              ) : (\n                <View> {formatCurrency(number)}</View>\n              )}\n            </View>\n          )}\n        </View>\n      )}\n    </View>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}